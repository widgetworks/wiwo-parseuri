{"version":3,"file":"parseuri.js","sourceRoot":"","sources":["parseuri.ts"],"names":[],"mappings":"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","sourcesContent":["// parseUri 1.2.2\r\n// (c) Steven Levithan <stevenlevithan.com>\r\n// MIT License\r\n// http://blog.stevenlevithan.com/archives/parseuri\r\n//\r\n// Upgraded by Anatoly Lapshin (https://github.com/holywarez/parseuri)\r\n\r\n\r\nexport type IUriDescriptor = IUriProps & IUriMethods;\r\n\r\n\r\nexport interface IUriProps {\r\n    \"anchor\": string\r\n    \"query\": string\r\n    \"file\": string\r\n    \"directory\": string\r\n    \"path\": string\r\n    \"relative\": string\r\n    \"port\": string\r\n    \"host\": string\r\n    \"password\": string\r\n    \"user\": string\r\n    \"userInfo\": string\r\n    \"authority\": string\r\n    \"protocol\": string\r\n    \"source\": string\r\n    \"queryKey\": Record<string, string>\r\n}\r\n\r\nexport type IExceptProps = keyof IUriProps;\r\n\r\nexport interface IUriMethods {\r\n    // NOTE: Mutates source UriDescriptor\r\n    toAbsolute(pattern: IUriDescriptor): string | undefined\r\n    normalizeProtocol(uri: IUriDescriptor): this\r\n    \r\n    isAbsolute(): boolean\r\n    isRelative(): boolean\r\n    origin(): string\r\n    \r\n    toString(except?: IExceptProps[]): string\r\n    toUriString(except?: IExceptProps[]): string\r\n}\r\n\r\n\r\nfunction contains(list, obj) {\r\n    var i = list.length;\r\n    while (i--) {\r\n        if (list[i] === obj) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\nfunction extend(dest, src) {\r\n    // Non-recursive copy from src to dest.\r\n    for (var i in src){\r\n        if (src.hasOwnProperty(i)){\r\n            dest[i] = src[i];\r\n        }\r\n    }\r\n    return dest;\r\n}\r\n\r\nexport var URI = {\r\n    options: {\r\n        strictMode: true,\r\n        key: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\r\n        q:   {\r\n            name:   \"queryKey\",\r\n            parser: /(?:^|&)([^&=]*)=?([^&]*)/g\r\n        },\r\n        parser: {\r\n            strict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\r\n            loose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\r\n        }\r\n    },\r\n    \r\n    parse: function (str: string, strictMode?: boolean): IUriDescriptor {\r\n        if (typeof strictMode === 'undefined'){\r\n            strictMode = URI.options.strictMode;\r\n        }\r\n        var o = URI.options;\r\n        var m = o.parser[strictMode ? \"strict\" : \"loose\"].exec(str);\r\n        var uri: IUriDescriptor = {} as any;\r\n        var i = 14;\r\n    \r\n        while (i--) uri[o.key[i]] = m[i] || \"\";\r\n    \r\n        uri[o.q.name] = {};\r\n        uri[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\r\n            if ($1) uri[o.q.name][$1] = $2;\r\n        });\r\n    \r\n        return extend(uri, extensionPack);\r\n    },\r\n};\r\n\r\nvar extensionPack = {\r\n\r\n    toAbsolute: function(pattern) {\r\n        if (pattern.isRelative()) return;\r\n\r\n        this.host = pattern.host;\r\n        this.port = pattern.port;\r\n        this.protocol = pattern.protocol;\r\n        this.user = pattern.user;\r\n        this.password = pattern.password;\r\n        return this.toUriString();\r\n    },\r\n\r\n    isAbsolute: function() {\r\n        return !this.isRelative();\r\n    },\r\n\r\n    isRelative: function() {\r\n        return !this.host;\r\n    },\r\n    \r\n    /**\r\n     * Set the protocol for this instance if it\r\n     * hasn't already been set.\r\n     * \r\n     * For protocol-relative URIs ('//example.com') this\r\n     * will set the protocol from the given `uri` parameter.\r\n     * \r\n     * @param  {Uri} uri - An absolute Uri object that has a `protocol` value.\r\n     * @return {Uri} Returns this instance for chaining\r\n     */\r\n    normalizeProtocol: function(uri){\r\n        if (uri.isAbsolute()){\r\n            this.protocol = this.protocol || uri.protocol;\r\n        }\r\n        return this;\r\n    },\r\n    \r\n    /**\r\n     * Return the origin of this URI or\r\n     * null if it is a relative URI.\r\n     * \r\n     * This should match the style of `window.location.origin`\r\n     * as closely as possible and return:\r\n     * \r\n     *     'protocol://host:port'\r\n     * \r\n     * If protocol or port are not set then they will be excluded:\r\n     * \r\n     *     '//host'\r\n     *     '//host:80'\r\n     *     'https://host'\r\n     * \r\n     * NOTE: We don't handle `user` or `password` properties.\r\n     * \r\n     * @return {[type]} [description]\r\n     */\r\n    origin: function(){\r\n        // Start with `host`.\r\n        var origin = '//'+ this.host;\r\n        \r\n        if (this.protocol){\r\n            // Add `protocol`.\r\n            origin = this.protocol + ':' + origin;\r\n        }\r\n        \r\n        if (this.port){\r\n            // Add `port`.\r\n            origin = origin + ':' + this.port;\r\n        }\r\n        \r\n        return origin;\r\n    },\r\n    \r\n    toString: function(except) {\r\n        return this.toUriString(except);\r\n    },\r\n    \r\n    toUriString: function(except) {\r\n        var except = except || [];\r\n        var result = \"\";\r\n        var original = \"\";\r\n        if (this.protocol) {\r\n            if (!contains(except, 'protocol')) result += this.protocol + \"://\";\r\n            original += this.protocol + \"://\";\r\n            if (this.user) {\r\n                if (!contains(except, 'userInfo')) result += this.user;\r\n                original += this.user;\r\n                if (this.password) {\r\n                    if (!contains(except, 'userInfo')) result += \":\" + this.password;\r\n                    original += \":\" + this.password;\r\n                }\r\n\r\n                if (!contains(except, 'userInfo')) result += \"@\";\r\n                original += \"@\";\r\n            }\r\n\r\n            if (this.host) {\r\n                if (!contains(except, 'host')) result += this.host;\r\n                original += this.host;\r\n            }\r\n\r\n            if (this.port) {\r\n                if (!contains(except, 'port'))  result += \":\" + this.port;\r\n                original += \":\" + this.port;\r\n            }\r\n        }\r\n\r\n        if (this.path) {\r\n            if (!contains(except, 'path')) result += this.path;\r\n            original += this.path;\r\n        }\r\n\r\n        if (this.queryKey) {\r\n            var queryString = \"\";\r\n            var first = true;\r\n            for (var key in this.queryKey) {\r\n                if (!this.queryKey.hasOwnProperty(key)) continue;\r\n\r\n                if (!first) queryString += \"&\";\r\n                queryString += key + \"=\" + this.queryKey[key];\r\n                first = false;\r\n            }\r\n\r\n            if (queryString.length > 0) {\r\n                if (!contains(except, 'queryKey')) result += \"?\" + queryString;\r\n                original += \"?\" + queryString;\r\n            }\r\n        }\r\n\r\n        if (this.anchor) {\r\n            if (!contains(except, 'anchor')) result += \"#\" + this.anchor;\r\n            original += \"#\" + this.anchor;\r\n        }\r\n\r\n        extend(this, URI.parse(original));\r\n\r\n        return result;\r\n    }\r\n};\r\n\r\n\r\nexport default URI;\r\n"]}